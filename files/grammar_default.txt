PROGRAM = FUNCTIONS MAINFUNC
PROGRAM = DECL endLine GLDECL FUNCTIONS MAINFUNC
MAINFUNC = main paramBeg paramEnd TYPE BLOCK

GLDECL = DECL endLine GLDECL
GLDECL = epsilon

FUNCTIONS = funDecl id PARAMS RETURNTYPE BLOCK FUNCTIONS
FUNCTIONS = epsilon

PARAMS = paramBeg LISTPARAMS paramEnd
LISTPARAMS = TYPE NAME
LISTPARAMS = LISTPARAMS commaSep TYPE NAME
LISTPARAMS = epsilon

TYPE = typeInt
TYPE = typeFloat
TYPE = typeBool
TYPE = typeChar
TYPE = typeString
TYPE = typeEmpty
TYPE = typeNull

RETURNTYPE = TYPE
RETURNTYPE = TYPE arrayBeg arrayEnd

NAME = id
NAME = id arrayBeg EXPR arrayEnd
NAME = id arrayBeg arrayEnd

BLOCK = blockBeg CMDS blockEnd

CMDS = CMDS CMD
CMDS = CMD

CMD = DECL endLine
CMD = id ASSG endLine
CMD = id arrayBeg EXPR arrayEnd ASSG endLine
CMD = id FUNCCALL endLine
CMD = PRINT endLine
CMD = READ endLine
CMD = IFELSE
CMD = WHILE
CMD = REPEAT
CMD = RETURN endLine

DECL = varDecl TYPE NAME
DECL = varDecl TYPE NAME ASSG

ASSG = opAssign VALUE
ASSG = opAssign TYPE castSep VALUE

VALUE = ARRAY
VALUE = EXPR

ARRAY = arrayValBeg ELEMENTS arrayValEnd
ELEMENTS = EXPR
ELEMENTS = ELEMENTS commaSep EXPR

FUNCCALL = paramBeg LISTPARAMSCALL paramEnd
LISTPARAMSCALL = PARAMITEM
LISTPARAMSCALL = LISTPARAMSCALL commaSep PARAMITEM
PARAMITEM = EXPR
PARAMITEM = epsilon

PRINT = cmdPrint paramBeg EXPR paramEnd
READ = cmdRead paramBeg NAME paramEnd

IFELSE = IF ELIF ELSE
IF = cmdIf paramBeg EXPR paramEnd BLOCK
ELIF = cmdElif paramBeg EXPR paramEnd BLOCK ELIF
ELIF = epsilon
ELSE = cmdElse BLOCK
ELSE = epsilon

WHILE = cmdWhile paramBeg EXPR paramEnd BLOCK
REPEAT = cmdRepeat id cmdIn paramBeg EXPR commaSep EXPR commaSep EXPR paramEnd BLOCK
REPEAT = cmdRepeat id cmdIn paramBeg EXPR commaSep EXPR paramEnd BLOCK

RETURN = cmdReturn EXPR

EXPR = EXPROR
EXPROR = EXPROR opOr EXPRAND
EXPROR = EXPRAND

EXPRAND = EXPRAND opAnd EXPREQUALS
EXPRAND = EXPREQUALS

EXPREQUALS = EXPRREL opEquals EXPRREL
EXPREQUALS = EXPRREL

EXPRREL = EXPRADD opRel EXPRADD
EXPRREL = EXPRADD

EXPRADD = EXPRADD opAditiv EXPRAMULT
EXPRADD = EXPRAMULT

EXPRAMULT = EXPRAMULT opMult EXPRUN
EXPRAMULT = EXPRUN

EXPRUN = opUnaryNeg EXPRUN
EXPRUN = EXPRPARAM

EXPRPARAM = paramBeg EXPR paramEnd
EXPRPARAM = EXPRVALUES

EXPRVALUES = id
EXPRVALUES = id CONCAT
EXPRVALUES = constNumInt
EXPRVALUES = constNumFloat
EXPRVALUES = constBool
EXPRVALUES = constChar
EXPRVALUES = constChar CONCAT
EXPRVALUES = constString
EXPRVALUES = constString CONCAT
EXPRVALUES = id arrayBeg EXPR arrayEnd ARRCONCAT
EXPRVALUES = id FUNCCALL
EXPRVALUES = id CONCAT

ARRCONCAT = CONCAT
ARRCONCAT = epsilon

CONCAT = opConcat constString
CONCAT = opConcat constChar
CONCAT = opConcat id